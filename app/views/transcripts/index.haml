:coffeescript
  window.mainPageTitle = 'Transcripts'

  ShopifyApp.ready ->
    ShopifyApp.Bar.initialize
      title: window.mainPageTitle
      icon: '/icon.png'
      breadcrumb:
          label: 'Preferences'
          href: "#{preferences_path}"
          target: 'app'
      buttons:
        secondary:
          label: 'Preferences'
          href: "#{preferences_url}"
          target: 'app'

    $('.table.clickable > tbody > tr').on 'click', (e) ->
      if e.target.type != 'checkbox'
        $.ajax
          url: $(this).data('href')
          type: 'GET'
          dataType: 'json'
          success: (res) ->
            $('#conversation-detail-modal').on 'show.bs.modal', (e) ->
              $('#conversation-detail-modal').attr('data-id', res.id)
              $('#conversation-detail-modal .modal-header .modal-title').text('Chat with ' + res.title + ' on ' + new Date(res.created_at).toLocaleString())
              html = '<div class="row pad-left pad-right"><p>Name: ' + res.title + '</p><p>Email:' + res.email +
                '</p><p>IP: ' + res.location.ip + ' (<a class="small" href="#" id="conversation-ban-btn">ban</a>)</p></div><hr/><div class="row messages-display-container"><div class="list-group">'

              for m in res.messages
                html += renderMessageHtml(m)

              html += '</div></div>'

              $('#conversation-detail-modal .modal-body').html(html)

            $('#conversation-detail-modal').modal('show')

    $('#checkbox-all').change ->
      $('.checkbox-ids').prop('checked', $(this).prop('checked'))

    $('.checkbox-ids').change ->
      checked = $(this).prop('checked')
      if !checked && $('#checkbox-all').prop('checked')
        $('#checkbox-all').prop('checked', false)

    $('input[type=checkbox]').change ->
      length = $('.checkbox-ids:checked').length
      if length is 0
        $('#conversations-delete').hide()
        $('#conversations-archived').hide()
        $('#conversations-unarchived').hide()
      else
        $('#conversations-delete').show()
        $('#conversations-archived').show()
        $('#conversations-unarchived').show()
      if length is $('.checkbox-ids').length
        $('#checkbox-all').prop('checked', true)

    $('#conversations-delete').on 'click', ->
      ids = $('.checkbox-ids:checked').map ->
        $(this).val()
      .get()
      $.ajax
        url: "#{chat_transcripts_path}"
        type: 'DELETE'
        dataType: 'json'
        data:
          ids: ids
        success: (res) ->
          if res.deleted > 0
            ShopifyApp.flashNotice(res.deleted + " chat transcript(s) deleted.")
            location.reload()
          else
            ShopifyApp.flashError("0 chat transcript deleted.")

    $('#conversations-delete-all').on 'click', ->
      $.ajax
        url: "#{chat_transcripts_path}"
        type: 'DELETE'
        dataType: 'json'
        data:
          all: true
        success: (res) ->
          if res.deleted > 0
            ShopifyApp.flashNotice(res.deleted + " chat transcript(s) deleted.")
            location.reload()
          else
            ShopifyApp.flashError("0 chat transcript deleted.")

    $('#conversations-search button').on 'click', ->
      searchConversations()

    $('#conversations-search input').keypress (e) ->
      if e.keyCode is 13
        searchConversations()

    $('#conversations-archived').on 'click', ->
      ids = $('.checkbox-ids:checked').map ->
        $(this).val()
      .get()
      $.ajax
        url: "#{chat_transcripts_path}"
        type: 'PUT'
        dataType: 'json'
        data:
          archived: ids
        success: (res) ->
          if res.archived > 0
            ShopifyApp.flashNotice(res.archived + " chat transcript(s) archived.")
            location.reload()
          else
            ShopifyApp.flashError("0 chat transcript archived.")

    $('#conversations-unarchived').on 'click', ->
      ids = $('.checkbox-ids:checked').map ->
        $(this).val()
      .get()
      $.ajax
        url: "#{chat_transcripts_path}"
        type: 'PUT'
        dataType: 'json'
        data:
          unarchived: ids
        success: (res) ->
          if res.unarchived > 0
            ShopifyApp.flashNotice(res.unarchived + " chat transcript(s) unarchived.")
            location.reload()
          else
            ShopifyApp.flashError("0 chat transcript unarchived.")

    $('#conversations-show-archived').on 'click', ->
      url = window.location.href
      window.location.href = setUrlParameter(url, 'archived', 'true')

    $('#conversations-hide-archived').on 'click', ->
      url = window.location.href
      window.location.href = setUrlParameter(url, 'archived', 'false')

    $(document).on 'click', '#conversation-download-btn', ->
      id = $('#conversation-detail-modal').attr('data-id')
      window.open('#{chat_download_url}?id=' + id, '_blank')

    $(document).on 'click', '#conversation-email-btn', ->
      id = $('#conversation-detail-modal').attr('data-id')
      email = prompt('Please enter your email:')
      if email
        if /^([a-zA-Z0-9_\.\-])+\@.(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,5})+$/.test(email)
          $.ajax
            url: '#{chat_send_mail_transcript_path}'
            type: 'POST'
            dataType: 'json'
            data:
              id: id
              email: email
            success: (res) ->
              ShopifyApp.flashNotice("A email has been sent to you.")
              $('#conversation-detail-modal').modal('hide')
        else
          ShopifyApp.flashError("Please enter a valid email address.")

    $(document).on 'click', '#conversation-ban-btn', ->
      id = $('#conversation-detail-modal').attr('data-id')
      $.ajax
        url: '#{chat_ban_url}'
        type: 'delete'
        dataType: 'json'
        data:
          id: id
        success: (res) ->
          $('#conversation-detail-modal').modal('hide')


  searchConversations = () ->
    q = $('#conversations-search input').val()
    if q isnt ''
      url = window.location.href
      window.location.href = setUrlParameter(url, 'q', q)

  renderMessageHtml = (m) ->
    json = JSON.parse(m.message.json)
    if json.is_joined || json.is_left || json.is_closed
      appendStatusChange(json.text)
    else if json.type == 'o'
      appendOperatorMessage(json.display_name, json.avatar, json.text, m.timestamp)
    else if json.type == 'v'
      appendVisitorMessage(json.display_name, json.text, m.timestamp)

  window.appendStatusChange = (msg) ->
    '<div class="pad-top pad-bottom status-message">' + msg + '</div>'

  window.appendOperatorMessage = (name, avatar, msg, time) ->
    DateTime = new Date(Number(time))
    Time = DateTime.toLocaleString()

    if !avatar || avatar == ''
      avatar = "#{asset_url('avatars/avatar-operator.png')}"
    '<div class="list-group-item agent-message"><div class="media"><div class="media-left">' +
    '<img class="media-object" src="' + avatar+'"></div><div class="media-body"><h4 class="media-heading">' + name+
    ' <small>- ' + Time+ '</small></h4>' + msg+ '</div></div></div>'

  window.appendVisitorMessage = (name, msg, time) ->
    DateTime = new Date(Number(time))
    Time = DateTime.toLocaleString()

    '<div class="list-group-item visitor-message"><div class="media"><div class="media-left">' +
    '<img class="media-object" src="#{asset_url('avatars/visitor-avatar-thick.png')}"></div>' +
    ' <div class="media-body"><h4 class="media-heading">' + name +
    ' <small>- ' + Time + '</small></h4>' + msg + '</div></div></div>'


.panel
  .panel-body
    .row.pad-bottom
      .col-sm-6
        .input-group#conversations-search
          %input.form-control{type: 'text', placeholder: 'Search for...', value: params[:q]}
          %span.input-group-btn
            %button.btn.btn-default{type: 'button'} Search
      .pull-right{style: 'padding-right: 100px'}
        .btn-group{role: 'group'}
          %button.btn.btn-default.dropdown-toggle{type: 'button', 'data-toggle': 'dropdown', 'aria-haspopup': true, 'aria-expanded': false}
            Actions
            %span.caret
          %ul.dropdown-menu
            %li#conversations-delete{style: 'display: none;'}
              %a{href: '#'} Delete selected
            %li#conversations-delete-all
              %a{href: '#'} Delete all
            %li#conversations-archived{style: 'display: none;'}
              %a{href: '#'} Archived selected
            %li#conversations-unarchived{style: 'display: none;'}
              %a{href: '#'} Unarchived selected
            - if @archived
              %li#conversations-hide-archived
                %a{href: '#'} Hide archived
            - else
              %li#conversations-show-archived
                %a{href: '#'} Show archived

    .row.pad-top
      %table.table.table-hover.clickable
        %thead
          %tr
            %th
              %input#checkbox-all{type: 'checkbox'}
            %th Date
            %th Visitor
            %th Operator
            %th Rating
            %th Status
        %tbody
          - @conversations.each do |conversation|
            %tr{'data-href': chat_transcript_path(conversation)}
              %td
                %input.checkbox-ids{type: 'checkbox', value: conversation.id}
              %td= conversation.created_at
              %td= conversation.title
              %td= conversation.users.size > 0 ? conversation.users.first.display_name : ''
              %td= conversation.rating == 'like' ? 'Like' : (conversation.rating == 'like' ? 'Dislike' : 'None')
              %td= conversation.status == 'open' ? 'Open' : 'Close'
    .row
      .pull-right.pad-right
        = will_paginate @conversations, class: 'digg_pagination'

#conversation-detail-modal.modal.fade{tabindex: '-1', role: 'dialog', 'aria-labelledby': 'conversation-detail-modal-label'}
  .modal-dialog{role: 'document'}
    .modal-content
      .modal-header
        %button.close{'data-dismiss': 'modal', 'aria-label': 'Close'}
          %span{'aria-hidden': 'true'} &times;
        %h4#conversation-detail-modal-label.modal-title Conversation detail
      .modal-body
        \...
      .modal-footer
        %button#conversation-download-btn.btn.btn-primary{type: 'button'} Download Transcript
        %button#conversation-email-btn.btn.btn-success{type: 'button'} Email Transcript
        %button.btn.btn-default{type: 'button', 'data-dismiss': 'modal'} Close